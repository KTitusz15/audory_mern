{"ast":null,"code":"var _jsxFileName = \"/Users/tituszkiralyhazi/audory mern tutorial/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [posts, setPosts] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('/api/posts'); // Assuming your backend route for fetching data is '/api/data'\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const jsonData = await response.json();\n        setPosts(jsonData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.name\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"wpRH37fUtUObFvrmE0Zv7YZafpY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","fetchPosts","response","fetch","ok","Error","jsonData","json","error","console","className","children","map","post","item","name","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tituszkiralyhazi/audory mern tutorial/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst Home = () => {\n    const [posts, setPosts] = useState(null)\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const response = await fetch('/api/posts'); // Assuming your backend route for fetching data is '/api/data'\n                if (!response.ok) {\n                  throw new Error('Network response was not ok');\n                }\n                const jsonData = await response.json();\n                setPosts(jsonData);\n              } catch (error) {\n                console.error('Error fetching data:', error);\n              }\n        }\n\n        fetchPosts()\n    }, [])  \n\n  return (\n    <div className='home'>\n        <div className=\"posts\">\n            {posts.map(post => (\n                <div key={post._id}>{item.name}</div>\n            ))}\n        </div>\n    </div>\n  )\n}\n\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACtCP,QAAQ,CAACM,QAAQ,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACN,CAAC;IAEDP,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAER,oBACEL,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBf,OAAA;MAAKc,SAAS,EAAC,OAAO;MAAAC,QAAA,EACjBZ,KAAK,CAACa,GAAG,CAACC,IAAI,iBACXjB,OAAA;QAAAe,QAAA,EAAqBG,IAAI,CAACC;MAAI,GAApBF,IAAI,CAACG,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAtB,EAAA,CA7BKD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA+BV,eAAeA,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}